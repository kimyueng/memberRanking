<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.system.mapper.MemberDetailMapper">
  <resultMap id="BaseResultMap" type="com.smart.system.domain.entity.MemberDetail">
    <!--@mbg.generated-->
    <!--@Table member_detail-->
    <id column="member_detail_id" jdbcType="INTEGER" property="memberDetailId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    member_detail_id, sex, city, member_id, create_date, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from member_detail
    where member_detail_id = #{memberDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from member_detail
    where member_detail_id = #{memberDetailId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="member_detail_id" keyProperty="memberDetailId" parameterType="com.smart.system.domain.entity.MemberDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into member_detail (sex, city, member_id, 
      create_date, `status`)
    values (#{sex,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="member_detail_id" keyProperty="memberDetailId" parameterType="com.smart.system.domain.entity.MemberDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into member_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sex != null">
        sex,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.system.domain.entity.MemberDetail">
    <!--@mbg.generated-->
    update member_detail
    <set>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where member_detail_id = #{memberDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.system.domain.entity.MemberDetail">
    <!--@mbg.generated-->
    update member_detail
    set sex = #{sex,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where member_detail_id = #{memberDetailId,jdbcType=INTEGER}
  </update>
</mapper>